<project name="My Project" default="all" basedir="." xmlns:sonar="antlib:org.sonar.ant">

	<property name="src.java.dir" location="./src/Fadi" />
	<property name="result.dir" location="./target" />
	<property name="result.javaclasses.dir" location="${result.dir}/classes" />


	<path id="NecessaryLibraries">
		<pathelement location="./MyLibraries/junit.jar" />
		<!--matcher-->
		<pathelement location="./MyLibraries/org.hamcrest.core_1.3.0.jar" />

	</path>


	<!-- Define the SonarQube global properties (the most usual way is to pass these properties via the command line) -->
	<property name="sonar.jdbc.username" value="sonar" />
	<property name="sonar.jdbc.password" value="sonar" />

	<property name="sonar.host.url" value="http://localhost:9000" />



	<!-- Define the SonarQube project properties -->
	<property name="sonar.projectKey" value="org.sonarqube:sonarqube-scanner-ant" />
	<property name="sonar.projectName" value="Example of SonarQube Scanner for Ant Usage" />
	<property name="sonar.projectVersion" value="1.0" />
	<property name="sonar.sources" value="./src/Fadi" />
	<property name="sonar.java.binaries" value="./target" />
	<property name="sonar.language" value="java" />




	<target name="compile">
		<mkdir dir="${result.javaclasses.dir}" />
		<javac srcdir="${src.java.dir}" destdir="${result.javaclasses.dir}" debug="true" includeantruntime="false">
			<classpath>
				<path refid="NecessaryLibraries" />
				<pathelement location="${result.javaclasses.dir}" />
			</classpath>
		</javac>
	</target>

	<!-- Define SonarQube Scanner for Ant Target -->
	<target name="sonar" depends="compile">
		<taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
			<!-- Update the following line, or put the "sonarqube-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
			<classpath path="C:\sonarqube-7.0\lib\scanner\sonar-scanner-engine-shaded-7.0.jar" />
		</taskdef>

		<!-- Execute SonarQube Scanner for Ant Analysis -->
		<sonar:sonar />
	</target>



	<!--<target name="test" depends="compile">
			fork : each test will run in its own JVM (to seperate test cases)
		<junit printsummary="true" haltonfailure="true" fork="true">
			<classpath>
				<path refid="NecessaryLibraries">
				</path>
				<pathelement location="${result.javaclasses.dir}" />
			</classpath>
			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${result.javaclasses.dir}">
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>-->


	<target name="all" depends="compile,sonar" />
</project>